{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","items","setItems","ToDoDelete","id","prevItems","filter","element","index","Heading","className","src","alt","ToDoCard","props","todo","onClick","onDelete","type","required","placeholder","value","onChange","e","target","event","preventDefault","alert","map","itemValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAmEeA,MA9Df,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAeMC,EAAa,SAACC,GAClBF,GAAS,SAACG,GAAc,OAAOA,EAAUC,QAAO,SAACC,EAAQC,GAAT,OAAmBA,IAAQJ,SAIvEK,EAAU,WACd,OACI,sBAAKC,UAAU,eAAf,UACA,qBAAKC,IAAI,eAAeC,IAAI,SAC5B,yEAICC,EAAW,SAACC,GACjB,OACI,sBAAKJ,UAAU,YAAf,UACI,4BAAII,EAAMC,OAEV,wBAAQC,QAAS,kBAAMF,EAAMG,SAASH,EAAMV,KAA5C,mBAKV,OACE,mCACE,qBAAKM,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,cAACD,EAAD,IACA,qBAAKC,UAAU,cAAf,SACA,iCACE,uBAAOQ,KAAK,OAAOC,UAAQ,EAACC,YAAY,mBAAmBC,MAAOtB,EAAOuB,SA3CjE,SAACC,GAAD,OAAOvB,EAASuB,EAAEC,OAAOH,UA4CjC,wBAAQH,KAAK,SAASF,QA1ChB,SAACS,GACfA,EAAMC,iBACK,KAAR3B,GAKHG,GAAU,SAACG,GAAc,MAAM,GAAN,mBAAWA,GAAX,CAAsBN,OAC/CC,EAAS,KAJP2B,MAAM,uBAsCA,oBAGF,qBAAKjB,UAAU,YAAf,SACCT,EAAM2B,KAAK,SAACC,EAAWrB,GACtB,OAAO,cAACK,EAAD,CAAsBT,GAAII,EAAOO,KAAMc,EAAWZ,SAAUd,GAA7CK,gBC/CnBsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ac76bd1.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport './App.css';\n\n\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const InputData = (e) => setInput(e.target.value);\n\n  const AddToDo = (event) =>{\n    event.preventDefault();\n    if(input===\"\")\n    {\n      alert(\"Please Enter ToDo!\");\n      return;\n    }\n    setItems( (prevItems) =>{return [...prevItems, input]});\n    setInput(\"\");\n  };\n\n  const ToDoDelete = (id) => {\n    setItems((prevItems) =>{return prevItems.filter((element,index) => index!==id)});\n  \n  };\n\n  const Heading = () =>{\n    return(\n        <div className=\"todo-heading\">\n        <img src=\"icontodo.png\" alt=\"Logo\"/>\n        <h1>ToDoistic : Create Your Own ToDo's!</h1>\n        </div>\n    );\n  };\n   const ToDoCard = (props) =>{\n    return(\n        <div className=\"todo-card\">\n            <p>{props.todo} \n            </p>\n            <button onClick={() => props.onDelete(props.id)}>X</button>\n        </div>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"main\">\n        <div className=\"todo-container\">\n          <Heading/>\n          <div className=\"todo-create\">\n          <form>\n            <input type=\"text\" required placeholder=\"Add Your ToDo...\" value={input} onChange={InputData}/>\n            <button type=\"submit\" onClick={AddToDo}>+</button>\n          </form>\n        </div>\n          <div className=\"todo-list\">\n          {items.map( (itemValue, index) => {\n            return <ToDoCard key={index} id={index} todo={itemValue} onDelete={ToDoDelete}/>})}      \n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}